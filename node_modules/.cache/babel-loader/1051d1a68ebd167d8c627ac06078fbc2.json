{"ast":null,"code":"import * as ac from './actions/actionCreators';\n\nconst axios = require('axios'); //PATH (should be where your server is running)\n\n\nlet path = \"http://localhost:5001/api\"; // THUNKS\n//All employees\n\nexport const fetchAllEmployeesThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/employees`);\n    dispatch(ac.fetchAllEmployees(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addEmployeeThunk = employee => async dispatch => {\n  // employee = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/employees`, employee);\n    dispatch(ac.addEmployee(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteEmployeeThunk = employeeId => async dispatch => {\n  try {\n    await axios.delete(`${path}/employees/${employeeId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteEmployee(employeeId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editEmployeeThunk = employee => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/employees/${employee.id}`, employee); //res.data is the updated employee object\n\n    dispatch(ac.editEmployee(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single employee\n\nexport const fetchEmployeeThunk = id => async dispatch => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`${path}/api/employees/${id}`)\n  //   .then((res) => res.data)\n  //   .then((employee) => dispatch(ac.fetchEmployee(employee)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`${path}/employees/${id}`);\n    dispatch(ac.fetchEmployee(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //All tasks\n\nexport const fetchAllTasksThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks`);\n    dispatch(ac.fetchAllTasks(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addTaskThunk = task => async dispatch => {\n  // task = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/tasks`, task);\n    dispatch(ac.addTask(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteTaskThunk = taskId => async dispatch => {\n  try {\n    await axios.delete(`${path}/tasks/${taskId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteTask(taskId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editTaskThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task); //res.data is the updated task object\n\n    dispatch(ac.editTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single task\n\nexport const fetchTaskThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks/${id}`);\n    dispatch(ac.fetchTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","require","path","fetchAllEmployeesThunk","dispatch","res","get","fetchAllEmployees","data","err","console","error","addEmployeeThunk","employee","post","addEmployee","deleteEmployeeThunk","employeeId","delete","deleteEmployee","editEmployeeThunk","put","id","editEmployee","fetchEmployeeThunk","fetchEmployee","fetchAllTasksThunk","fetchAllTasks","addTaskThunk","task","addTask","deleteTaskThunk","taskId","deleteTask","editTaskThunk","editTask","fetchTaskThunk","fetchTask"],"sources":["/Users/michaelxie/Desktop/School/Hunter/Computer Science/WebDevCS/FinalizedWebDevProject/Finalized_Github/frontend/finalized_frontend_webdev/src/store/thunks.js"],"sourcesContent":["import * as ac from './actions/actionCreators';\nconst axios = require('axios');\n\n//PATH (should be where your server is running)\nlet path = \"http://localhost:5001/api\";\n\n// THUNKS\n\n//All employees\nexport const fetchAllEmployeesThunk = () => async (dispatch) => {\n  try {\n    let res = await axios.get(`${path}/employees`);\n    dispatch(ac.fetchAllEmployees(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const addEmployeeThunk = (employee) => async (dispatch) => {\n  // employee = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/employees`, employee);\n    dispatch(ac.addEmployee(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const deleteEmployeeThunk = employeeId => async dispatch => {\n  try {\n    await axios.delete(`${path}/employees/${employeeId}`);\n    //delete succesful so change state with dispatch\n    dispatch(ac.deleteEmployee(employeeId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const editEmployeeThunk = employee => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/employees/${employee.id}`, employee);\n    //res.data is the updated employee object\n    dispatch(ac.editEmployee(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n//Single employee\nexport const fetchEmployeeThunk = (id) => async (dispatch) => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`${path}/api/employees/${id}`)\n  //   .then((res) => res.data)\n  //   .then((employee) => dispatch(ac.fetchEmployee(employee)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`${path}/employees/${id}`);\n    dispatch(ac.fetchEmployee(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n//All tasks\nexport const fetchAllTasksThunk = () => async (dispatch) => {\n  try {\n    let res = await axios.get(`${path}/tasks`);\n    dispatch(ac.fetchAllTasks(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const addTaskThunk = (task) => async (dispatch) => {\n  // task = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/tasks`, task);\n    dispatch(ac.addTask(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const deleteTaskThunk = taskId => async dispatch => {\n  try {\n    await axios.delete(`${path}/tasks/${taskId}`);\n    //delete succesful so change state with dispatch\n    dispatch(ac.deleteTask(taskId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const editTaskThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task);\n    //res.data is the updated task object\n    dispatch(ac.editTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n//Single task\nexport const fetchTaskThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks/${id}`);\n    dispatch(ac.fetchTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}