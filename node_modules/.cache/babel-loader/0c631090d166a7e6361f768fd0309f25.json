{"ast":null,"code":"var _jsxFileName = \"/Users/michaelxie/Desktop/School/Hunter/Computer Science/WebDevCS/FinalizedWebDevProject/Finalized_Github/frontend/finalized_frontend_webdev/src/components/containers/AllEmployeesContainer.js\";\nimport { Component, UseEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllEmployeesThunk, deleteEmployeeThunk } from \"../../store/thunks\";\nimport { AllEmployeesView } from \"../views\";\n/*\nfunction AllEmployeesContainer() {\n  const allEmployees = useSelector((state) => state.allEmployees);\n  const dispatch = useDispatch();\n\n  //replaces componentDidMount\n  useEffect(() => {\n    dispatch(fetchAllEmployeesThunk());\n  }, [dispatch]);\n\n  return <AllEmployeesView allEmployees={allEmployees}/>;\n}\n\nexport default AllEmployeesContainer;*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllEmployeesContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllEmployees();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(AllEmployeesView, {\n        allEmployees: this.props.allEmployees,\n        deleteEmployee: this.props.deleteEmployee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allEmployees: state.allEmployees\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllEmployees: () => dispatch(fetchAllEmployeesThunk()),\n    deleteEmployee: employeeId => dispatch(deleteEmployeeThunk(employeeId))\n  };\n}; // Type check props;\n\n\nAllEmployeesContainer.propTypes = {\n  allEmployees: PropTypes.array.isRequired,\n  fetchAllEmployees: PropTypes.func.isRequired\n}; // Export our store-connected container by default;\n\nexport default connect(mapState, mapDispatch)(AllEmployeesContainer);","map":{"version":3,"names":["Component","UseEffect","PropTypes","connect","fetchAllEmployeesThunk","deleteEmployeeThunk","AllEmployeesView","AllEmployeesContainer","componentDidMount","console","log","props","fetchAllEmployees","render","allEmployees","deleteEmployee","mapState","state","mapDispatch","dispatch","employeeId","propTypes","array","isRequired","func"],"sources":["/Users/michaelxie/Desktop/School/Hunter/Computer Science/WebDevCS/FinalizedWebDevProject/Finalized_Github/frontend/finalized_frontend_webdev/src/components/containers/AllEmployeesContainer.js"],"sourcesContent":["import { Component, UseEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { \n  fetchAllEmployeesThunk, \n  deleteEmployeeThunk \n} from \"../../store/thunks\";\n\nimport { AllEmployeesView } from \"../views\";\n/*\nfunction AllEmployeesContainer() {\n  const allEmployees = useSelector((state) => state.allEmployees);\n  const dispatch = useDispatch();\n\n  //replaces componentDidMount\n  useEffect(() => {\n    dispatch(fetchAllEmployeesThunk());\n  }, [dispatch]);\n\n  return <AllEmployeesView allEmployees={allEmployees}/>;\n}\n\nexport default AllEmployeesContainer;*/\n\nclass AllEmployeesContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllEmployees();\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <AllEmployeesView\n          allEmployees={this.props.allEmployees}\n          deleteEmployee={this.props.deleteEmployee}   \n        />\n      </div>\n    );\n  }\n}\n\n// Map state to props;\nconst mapState = (state) => {\n  return {\n    allEmployees: state.allEmployees,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllEmployees: () => dispatch(fetchAllEmployeesThunk()),\n    deleteEmployee: (employeeId) => dispatch(deleteEmployeeThunk(employeeId)),\n\n  };\n};\n\n// Type check props;\nAllEmployeesContainer.propTypes = {\n  allEmployees: PropTypes.array.isRequired,\n  fetchAllEmployees: PropTypes.func.isRequired,\n};\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllEmployeesContainer);\n"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,sBADF,EAEEC,mBAFF,QAGO,oBAHP;AAKA,SAASC,gBAAT,QAAiC,UAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;EAC5CQ,iBAAiB,GAAG;IAClBC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;IACA,KAAKA,KAAL,CAAWC,iBAAX;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE,QAAC,gBAAD;QACE,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAD3B;QAEE,cAAc,EAAE,KAAKH,KAAL,CAAWI;MAF7B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AAf2C,C,CAkB9C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,OAAO;IACLH,YAAY,EAAEG,KAAK,CAACH;EADf,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMI,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLP,iBAAiB,EAAE,MAAMO,QAAQ,CAACf,sBAAsB,EAAvB,CAD5B;IAELW,cAAc,EAAGK,UAAD,IAAgBD,QAAQ,CAACd,mBAAmB,CAACe,UAAD,CAApB;EAFnC,CAAP;AAKD,CAND,C,CAQA;;;AACAb,qBAAqB,CAACc,SAAtB,GAAkC;EAChCP,YAAY,EAAEZ,SAAS,CAACoB,KAAV,CAAgBC,UADE;EAEhCX,iBAAiB,EAAEV,SAAS,CAACsB,IAAV,CAAeD;AAFF,CAAlC,C,CAKA;;AACA,eAAepB,OAAO,CAACa,QAAD,EAAWE,WAAX,CAAP,CAA+BX,qBAA/B,CAAf"},"metadata":{},"sourceType":"module"}